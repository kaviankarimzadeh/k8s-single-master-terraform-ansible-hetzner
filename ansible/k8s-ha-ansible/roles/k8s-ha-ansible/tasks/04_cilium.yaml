- block:
    - name: restart containerd services
      when: inventory_hostname in ((groups['master_servers'] + groups['worker_servers']) | unique )
      become: true
      service:
        name: containerd
        state: restarted

    - name: Install pyyaml module for Cilium on the first master
      become: true
      when: inventory_hostname == groups['master_servers'][0]
      shell: sudo pip3 install pyyaml

    - name: Download cilium helm chart tgz file
      when: inventory_hostname == groups['master_servers'][0]
      ansible.builtin.get_url:
        url: https://github.com/cilium/charts/raw/master/cilium-{{cilium_version}}.tgz
        dest: /tmp/cilium-{{cilium_version}}.tgz

    - name: Unarchive cilium chart
      when: inventory_hostname == groups['master_servers'][0]
      ansible.builtin.unarchive:
        src: /tmp/cilium-{{cilium_version}}.tgz
        dest: /tmp
        remote_src: yes

    - name: Deploy Cilium chart from local path
      when: inventory_hostname == groups['master_servers'][0]
      kubernetes.core.helm:
        name: cilium
        chart_ref: /tmp/cilium/
        release_namespace: kube-system
        set_values:
        - value: ipam.mode=kubernetes
        - value: ipam.operator.clusterPoolIPv4PodCIDR="10.244.0.0/16"

    - name: Pause for 45 seconds
      ansible.builtin.pause:
        seconds: 45
      delegate_to: localhost

    - name: recreate all cluster pods after Cilium installation
      when: inventory_hostname == groups['master_servers'][0]
      shell: kubectl get pods --all-namespaces -o custom-columns=NAMESPACE:.metadata.namespace,NAME:.metadata.name,HOSTNETWORK:.spec.hostNetwork --no-headers=true | grep '<none>' | awk '{print "-n "$1" "$2}' | xargs -L 1 -r kubectl delete pod
      ignore_errors: true

    - name: remove repo directory from the first master
      when: inventory_hostname == groups['master_servers'][0]
      ansible.builtin.file:
        path: /tmp/cilium
        state: absent